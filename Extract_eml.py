import os
import shutil
import argparse
from chardet.universaldetector import UniversalDetector

def detect_encoding(filename):
    """Detect the encoding of the file using chardet package."""
    detector = UniversalDetector()
    with open(filename, 'rb') as f:
        for line in f:
            detector.feed(line)
            if detector.done:
                break
        detector.close()
    return detector.result['encoding']

def find_and_copy_eml_files(keyword_list, directory):
    """Find .eml files in the directory recursively and copy them if they contain all keywords."""
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith(".eml"):
                file_path = os.path.join(root, file)
                try:
                    encoding = detect_encoding(file_path)
                    with open(file_path, 'r', encoding=encoding, errors='ignore') as f:
                        content = f.read().lower()
                    if all(keyword.lower() in content for keyword in keyword_list):
                        create_copy(file_path)
                except Exception as e:
                    print(f"An error occurred while processing {file_path}: {str(e)}")

def create_copy(path):
    """Create a copy of the file in the output directory."""
    output_dir = "output"
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)
    shutil.copy2(path, output_dir)

def parse_arguments():
    """Parse command-line arguments."""
    parser = argparse.ArgumentParser(description='Extract .eml files by keywords.')
    parser.add_argument('keywords', type=str, help='Comma-separated keywords to search for.')
    parser.add_argument('-d', '--directory', default='.', type=str, help='Directory to search in.')
    args = parser.parse_args()
    return args.keywords.split(','), args.directory

def main():
    print("Used to extract .eml files by keywords")
    print("====@PwnEverything====")
    keywords, directory = parse_arguments()
    find_and_copy_eml_files(keywords, directory)
    print("Search completed!")

if __name__ == "__main__":
    main()
